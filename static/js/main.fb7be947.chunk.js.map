{"version":3,"sources":["components/Header/StyledHeader.js","components/Modal/index.js","components/Header/index.js","components/Search/StyledSearch.js","components/Search/index.js","components/Card/StyledCard.js","components/Button/StyledButton.js","components/Button/index.js","components/Card/index.js","pages/HomePage/HomeCard/index.js","apis/country.js","store/actions/index.js","store/actions/types.js","pages/HomePage/index.js","components/Spinner/index.js","pages/AllCountries/AllCountriesCard/index.js","pages/AllCountries/index.js","pages/SelectedCountry/StyledSelectedCountry.js","pages/SelectedCountry/index.js","pages/FavoriteCountries/index.js","GlobalStyle/index.js","components/App/index.js","constants/routes.js","store/reducers/allCountries.js","store/reducers/favoriteCountries.js","store/reducers/searchedCountry.js","store/reducers/selectedCountry.js","store/reducers/index.js","index.js"],"names":["StyledHeader","styled","header","StyledNav","nav","customStyles","content","top","left","right","bottom","marginRight","padding","transform","styles","textDecoration","color","AboutModal","useState","modalIsOpen","setModalIsOpen","closeModal","onClick","icon","faInfoCircle","isOpen","onRequestClose","style","contentLabel","fontFamily","fontWeight","textAlign","marginTop","position","cursor","fontSize","href","target","Header","to","faGlobeAmericas","component","StyledForm","div","StyledLabel","label","StyledSearchInput","input","Search","searchInputHandler","htmlFor","faSearchLocation","type","name","aria-label","id","placeholder","onChange","e","value","StyledCard","CardHeader","CardBody","CardFooter","StyledButton","button","Card","country","flag","capital","history","useHistory","src","alt","Button","push","HomeCard","useSelector","state","searchedCountry","map","countri","key","axios","create","baseURL","fetchAllCountries","region","dispatch","a","async","get","response","payload","data","HomePage","searchInput","setSearchInput","useDispatch","useEffect","countryName","display","searchValue","Loader","Spinner","AllCountriesCard","allCountries","StyledSelect","select","AllCountries","setRegion","handleSelect","event","preventDefault","length","Grid","Lead","span","Flag","img","RightSide","Currency","SelectedCountry","useParams","selectedCountry","topLevelDomain","callingCodes","altSpellings","subregion","population","latlng","demonym","area","timezones","borders","nativeName","numericCode","currencies","languages","translations","join","Object","values","FavoriteCountries","GlobalStyle","createGlobalStyle","App","path","exact","initialState","combineReducers","action","favoriteCountries","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","rootComponent","basename","rootDOM","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.fb7be947.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n\nconst StyledHeader = styled.header`\n  margin-top: -1rem;\n  background-color: #ddd;\n  box-shadow: 0 .2rem .3rem #999;\n`;\n\nexport const StyledNav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin-left: 4rem;\n    font-weight: 300;\n    text-transform: uppercase;\n    font-size: 2.5rem;\n    transition: all .5s ease-out;\n\n    &:hover {\n      background-color: #bbb;\n      color: #fff;\n      cursor: pointer;\n      padding: 0 6rem;\n      border-radius: 5px;\n    }\n  }\n\n  h3 {\n    font-size: 2rem;\n    text-transform: uppercase;\n    font-weight: 300;\n    margin-right: 4rem;\n    transition: all .5s ease-out;\n\n    &:hover {\n      background-color: #bbb;\n      color: #fff;\n      cursor: pointer;\n      padding: 0 6rem;\n      border-radius: 5px;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    \n    h1 {\n      margin-right: 4rem;\n\n      &:hover {\n        font-size: 2rem;\n      }\n    }\n\n    h3 {\n      margin-top: -1rem;\n      margin-left: 3rem;\n    }\n  }\n`;\n\nexport default StyledHeader;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport SocialMediaIcons from 'react-social-media-icons';\n\n\nconst socialMediaIcons = [\n  {\n    url: 'https://github.com/abdul-razaq',\n    className: 'fa-github-square',\n  },\n  {\n    url: 'https://twitter.com/ant1g3n',\n    className: 'fa-twitter',\n  },\n];\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    padding: '10rem 20rem',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst styles = {\n  textDecoration: 'none',\n  color: 'inherit',\n}\n\n\nconst AboutModal = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div>\n      <h3 onClick={openModal}>\n        <FontAwesomeIcon icon={faInfoCircle} /> About\n      </h3>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"About\"\n      >\n        <h2 style={{fontFamily: 'inherit', fontWeight: '300', textAlign: 'center', marginTop: '-5rem'}}>About</h2>\n        <span onClick={closeModal} style={{position: 'absolute', top: '10%', right: '10%', cursor: 'pointer', fontSize: '3rem'}}>&times;</span>\n        <div>App created by AbdulRazaq <a style={styles} href=\"https://github.com/abdul-razaq\" target=\"_blank\">github</a> <a style={styles} href=\"https://twitter.com/ant1g3n\" target=\"_blank\">twitter</a> </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AboutModal;\n","import React from 'react';\nimport { faInfoCircle, faGlobeAmericas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nimport StyledHeader, { StyledNav } from './StyledHeader';\nimport AboutModal from '../Modal';\n\nconst Header = () => {\n\n  return (\n    <StyledHeader>\n      <StyledNav>\n        <Link to='/' style={{ textDecoration: 'none', color: 'inherit' }}><h1><FontAwesomeIcon icon={faGlobeAmericas} /> Country Encyclopedia</h1></Link>\n        <Link style={{ textDecoration: 'none', color: 'inherit' }} component={AboutModal}>\n        </Link>\n      </StyledNav>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst StyledForm = styled.div`\n  max-width: 40rem;\n  margin: auto;\n  margin-top: 6rem;\n`;\n\nexport const StyledLabel = styled.label`\n  display: block;\n  text-align: center;\n  margin-bottom: 1.5rem;\n  margin-left: 10rem;\n  text-transform: uppercase;\n  font-weight: 400;\n  font-size: 1.3em;\n  transition: all .8s ease-out;\n\n  &:hover {\n    transform: rotateY(360deg);\n    cursor: pointer;\n  }\n`;\n\nexport const StyledSearchInput = styled.input`\n  width: 140%;\n  padding: 1rem 1rem;\n  border: none;\n  border: 1px solid #ddd;\n  color: #333;\n  outline: none;\n  font-size: inherit;\n  font-weight: 400;\n  border-radius: 5px;\n  box-shadow: 0 1px 1px #999;\n  transition: all 0.3s ease-out;\n\n  &:focus {\n    border: 1px solid #aaa;\n  }\n`;\n\nexport default StyledForm;\n","import React from 'react';\nimport { faSearchLocation } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport StyledForm, { StyledLabel, StyledSearchInput } from './StyledSearch';\n\nconst Search = ({ searchInputHandler }) => {\n\n  return (\n    <StyledForm>\n      <StyledLabel htmlFor=\"search\"><FontAwesomeIcon icon={faSearchLocation}/> Search Country</StyledLabel>\n        <StyledSearchInput type=\"search\" name=\"search\" aria-label=\"Search\" id=\"search\" placeholder=\"Search country by name e.g Finland...\" onChange={e => searchInputHandler(e.target.value)} />\n    </StyledForm>\n  );\n}\n \nexport default Search;\n","import styled from 'styled-components';\n\n\nconst StyledCard = styled.div`\n  max-width: 40rem;\n  margin: auto;\n  margin-top: 5rem;\n  background-color: #eee;\n  border-radius: 8px;\n  margin-bottom: 5rem;\n  box-shadow: 2px 2px 3px #999;\n`;\n\n\nexport const CardHeader = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n  }\n`;\n\nexport const CardBody = styled.div`\n  margin-left: 1rem;\n`;\n\nexport const CardFooter = styled.div`\n`;\n\nexport default StyledCard;","import styled from 'styled-components';\n\n\nconst StyledButton = styled.button`\n  border: none;\n  padding: 1rem 2rem;\n  color: #fff;\n  font-family: inherit;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-color: #4c9cdc;\n  cursor: pointer;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 1px 1px 4px #999;\n  margin-left: 1rem;\n  margin-bottom: 4rem;\n  transition: all .3s ease-out;\n\n  &:hover {\n    color: #fff;\n    background-color: #2980b9;\n  }\n\n  &:active {\n    box-shadow: 0 1px 1px #999;\n    transform: translateY(1px);\n  }\n`;\n\nexport default StyledButton;\n","import StyledButton from './StyledButton';\n\nexport default StyledButton;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport StyledCard, { CardHeader, CardBody, CardFooter } from './StyledCard';\nimport Button from '../Button';\n\n\nconst Card = ({ country }) => {\n\n  const {flag, name, capital} = country;\n\n  const history = useHistory();\n\n  const onCardButtonClick = () => {\n    history.push(`/countries/${name}`);\n  }\n\n  return (\n    <StyledCard>\n      <CardHeader>\n        <img src={flag} alt=\"country-flag\" />\n      </CardHeader>\n      <CardBody>\n        <p><span style={{ fontWeight: 700 }}>{name}</span></p>\n        <p><span style={{ fontWeight: 400 }}>Capital: </span><span style={{ fontWeight: 500 }}>{capital}</span></p>\n      </CardBody>\n      <CardFooter>\n        <Button onClick={onCardButtonClick}>Explore {name}</Button>\n      </CardFooter>\n    </StyledCard>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from '../../../components/Card';\n\n\nconst HomeCard = () => {\n\n  const country = useSelector(state => state.searchedCountry);\n  return country.map(countri => {\n    return <Card key={countri.name} country={countri}/>\n  });\n};\n\nexport default HomeCard;\n","import axios from 'axios';\n\n\nexport default axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2',\n});\n","// Action creators live here.\nimport country from '../../apis/country';\n\nimport {\n  SELECT_COUNTRY,\n  SEARCH_COUNTRY,\n  FETCH_ALL_COUNTRIES,\n  FAVORITE_COUNTRY,\n} from '../actions/types';\n\nexport const searchCountry = countryName => async dispatch => {\n  if (countryName) {\n    let response = await country.get(`/name/${countryName}`);\n    dispatch({\n      type: SEARCH_COUNTRY,\n      payload: response.data,\n    });\n  }\n};\n\nexport const fetchAllCountries = region => async dispatch => {\n  let response;\n  if (region === '') {\n    response = await country.get('/all');\n  } else {\n    response = await country.get(`/region/${region}`);\n  }\n\n  dispatch({\n    type: FETCH_ALL_COUNTRIES,\n    payload: response.data,\n  });\n};\n\nexport const favoriteCountry = country => {\n  return {\n    type: FAVORITE_COUNTRY,\n    payload: country,\n  };\n};\n\nexport const selectCountry = countryName => async dispatch => {\n  const response = await country.get(`/name/${countryName}`);\n\n  dispatch({\n    type: SELECT_COUNTRY,\n    payload: response.data,\n  });\n};\n","export const SEARCH_COUNTRY = 'SEARCH_COUNTRY';\nexport const FETCH_ALL_COUNTRIES = 'FETCH_ALL_COUNTRIES';\nexport const SELECT_COUNTRY = 'SELECT_COUNTRY';\nexport const FAVORITE_COUNTRY = 'FAVORITE_COUNTRY';\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Search from '../../components/Search';\nimport HomeCard from './HomeCard';\nimport Button from '../../components/Button';\n\nimport { searchCountry } from '../../store/actions';\n\nconst HomePage = () => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(searchCountry(searchInput));\n  }, [searchInput, dispatch]);\n\n  const searchInputHandler = searchValue => {\n    setSearchInput(searchValue);\n  };\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/countries/all');\n  };\n\n  return (\n    <>\n      <Header />\n      <div style={{ display: 'flex' }}>\n        <Search searchInputHandler={searchInputHandler} />\n        <span style={{ marginTop: '2rem' }}>\n          <Button onClick={handleClick}>All countries</Button>\n        </span>\n      </div>\n      <HomeCard />\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Loader = styled.div`\n\n  & {\n    font-size: 10px;\n    margin: 50px auto;\n    text-indent: -9999em;\n    width: 11em;\n    height: 11em;\n    border-radius: 50%;\n    background: #ffffff;\n    background: -moz-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\n    background: -webkit-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\n    background: -o-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\n    background: -ms-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\n    background: linear-gradient(to right, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\n    position: relative;\n    -webkit-animation: load3 1.4s infinite linear;\n    animation: load3 1.4s infinite linear;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  &:before {\n    width: 50%;\n    height: 50%;\n    background: #0dc5c1;\n    border-radius: 100% 0 0 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: '';\n  }\n  &:after {\n    background: #fff;\n    width: 75%;\n    height: 75%;\n    border-radius: 50%;\n    content: '';\n    margin: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  }\n  @-webkit-keyframes load3 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load3 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n}\n\n\n`;\n\nconst Spinner = () => {\n  return <Loader>Loading...</Loader>\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from '../../../components/Card';\n\n\nconst AllCountriesCard = () => {\n  \n  const allCountries = useSelector(state => state.allCountries);\n  return allCountries.map(country => {\n    return <Card key={country.name} country={country} />;\n  });\n};\n\nexport default AllCountriesCard;\n","import React, { useEffect, useState } from 'react';\nimport { fetchAllCountries } from '../../store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Spinner from '../../components/Spinner';\nimport Header from '../../components/Header';\nimport AllCountriesCard from './AllCountriesCard';\n\n\nconst StyledSelect = styled.select`\n  display: inline-block;\n  width: 30rem;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  padding: 1rem;\n  margin-top: 2rem;\n  color: inherit;\n  font-family: inherit;\n  font-size: 2.5rem;\n  border-radius: 5px;\n  background-color: #ccc;\n  box-shadow: 2px 2px 2px #bbb;\n  transition: all .4s ease-out;\n\n  &:hover {\n    background-color: #bbb;\n  }\n\n  & option {\n    background-color: #ccc;\n    outline: none;\n    display: block;\n    width: 100rem;\n    padding: 10rem;\n    cursor: pointer;\n  }\n`;\n\n\nconst AllCountries = () => {\n  const [region, setRegion] = useState('');\n  const dispatch = useDispatch();\n  const allCountries = useSelector(state => state.allCountries);\n\n  useEffect(() => {\n    dispatch(fetchAllCountries());\n  }, []);\n\n  const handleSelect = event => {\n    event.preventDefault();\n    setRegion(event.target.value);\n  }\n\n  useEffect(() => {\n    dispatch(fetchAllCountries(region));\n  }, [region])\n\n  const RegionSelect = () => {\n    return (\n      <StyledSelect name=\"region\" id=\"region\" onChange={handleSelect} value={region}>\n        <option value=\"africa\">Africa</option>\n        <option value=\"americas\">Americas</option>\n        <option value=\"asia\">Asia</option>\n        <option value=\"europe\">Europe</option>\n        <option value=\"oceania\">Oceania</option>\n      </StyledSelect>\n    )\n  }\n\n  if (allCountries.length !== 0) {\n    return (\n      <>\n      <Header />\n      <RegionSelect />\n      <AllCountriesCard />\n      </>\n    );\n  } else {\n    return <Spinner />;\n  }\n};\n\nexport default AllCountries;\n","import styled from 'styled-components';\n\nconst Grid = styled.div`\n  max-width: 125rem;\n  margin: auto;\n  margin-top: 5rem;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n\n  h3 {\n    font-weight: 600;\n    border-bottom: 1px solid #ddd;\n    font-size: 2rem;\n    font-style: italic;\n  }\n\n  p {\n    font-size: 1.8rem;\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Lead = styled.span`\n  font-weight: 600;\n  margin-right: 0.5rem;\n`;\n\nexport const Flag = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const RightSide = styled.div`\n  margin-left: 20rem;\n  h2 {\n    font-size: 6rem;\n    font-weight: 300;\n  }\n  div {\n    h3 {\n      font-size: 3.5rem;\n      margin-top: -1rem;\n      font-weight: 300;\n      border: none;\n      font-style: normal;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    margin-left: 0;\n  }\n`;\n\nexport const Currency = styled.div`\n  margin-top: -30rem;\n\n  @media screen and (max-width: 500px) {\n    margin-top: 0;\n  }\n`;\n\nexport default Grid;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCountry } from '../../store/actions';\nimport Grid, { Flag, RightSide, Lead, Currency } from './StyledSelectedCountry';\nimport Spinner from '../../components/Spinner';\nimport Header from '../../components/Header';\n\nconst SelectedCountry = () => {\n  const dispatch = useDispatch();\n  const { country } = useParams();\n\n  const selectedCountry = useSelector(state => state.selectedCountry);\n\n  useEffect(() => {\n    dispatch(selectCountry(country));\n  }, []);\n\n  if (selectedCountry[0]) {\n    const {\n      name,\n      topLevelDomain,\n      callingCodes,\n      capital,\n      altSpellings,\n      region,\n      subregion,\n      population,\n      latlng,\n      demonym,\n      area,\n      timezones,\n      borders,\n      nativeName,\n      numericCode,\n      currencies,\n      languages,\n      translations,\n      flag,\n    } = selectedCountry[0];\n    return (\n      <>\n        <Header />\n        <Grid>\n          <Flag src={flag} alt={name} />\n          <RightSide>\n            <h2>{name}</h2>\n            <div>\n              <h3>Capital: {capital}</h3>\n            </div>\n          </RightSide>\n          <div>\n            <h3>Other Names</h3>\n            <p>{altSpellings.join(', ')}</p>\n            <p>\n              <Lead>Native name:</Lead> {nativeName}\n            </p>\n          </div>\n          <RightSide>\n            <h3>Language Spoken</h3>\n            <p>{Object.values(languages[0]).join(', ')}</p>\n          </RightSide>\n          <div>\n            <h3>Other translations</h3>\n            <p>{Object.values(translations).join(', ')}</p>\n          </div>\n          <RightSide>\n            <h3>Geographical Information</h3>\n            <p>\n              <Lead>Capital:</Lead> {capital}\n            </p>\n            <p>\n              <Lead>Region / Continent:</Lead> {region}\n            </p>\n            <p>\n              <Lead>Sub-Region:</Lead> {subregion}\n            </p>\n            <p>\n              <Lead>People from {name} are called:</Lead> {demonym}\n            </p>\n            <p>\n              <Lead>Area:</Lead> {area} km<sup>2</sup>\n            </p>\n            <p>\n              <Lead>Population:</Lead> {population}\n            </p>\n            <p>\n              <Lead>Latitude/Longitude:</Lead> [ {latlng.join(' / ')} ]\n            </p>\n            <p>\n              <Lead>Landed Borders:</Lead> [{' '}\n              {borders.length === 0 ? 'None' : borders.join(', ')} ]\n            </p>\n          </RightSide>\n          <Currency>\n            <h3>Currencies spent</h3>\n            <p>{Object.values(currencies[0]).join(', ')}</p>\n            <p>\n              <Lead>Timezones:</Lead>{' '}\n              {timezones.length === 1 ? timezones : timezones.join(', ')}\n            </p>\n          </Currency>\n          <RightSide>\n            <h3>Miscellaneous</h3>\n            <p>\n              <Lead>Top level domain (TLD):</Lead>{' '}\n              {topLevelDomain.length === 1\n                ? topLevelDomain\n                : topLevelDomain.join(', ')}\n            </p>\n            <p>\n              <Lead>Calling code(s):</Lead>{' '}\n              {callingCodes.length === 1\n                ? callingCodes\n                : callingCodes.join(', ')}\n            </p>\n            <p>\n              <Lead>Numeric code(s):</Lead> {numericCode}\n            </p>\n          </RightSide>\n        </Grid>\n      </>\n    );\n  } else {\n    return <Spinner />;\n  }\n};\n\nexport default SelectedCountry;\n","import React from 'react';\n\n\nconst FavoriteCountries = () => {\n\n  return <div>Favorite Countries</div>;\n};\n\nexport default FavoriteCountries;\n","import { createGlobalStyle } from 'styled-components';\n\n\nconst GlobalStyle = createGlobalStyle`\n\n  html {\n    margin: 0;\n    padding: 0;\n    font-size: 62.5%;\n    text-rendering: optimizeLegibility;\n    box-sizing: border-box;\n  }\n\n  body {\n    background-color: #f4f4f4;\n    line-height: 3rem;\n    font-size: 2rem;\n    font-family: 'Fira Sans', sans-serif;\n    color: #444;\n\n    &::selection {\n      color: #2980b9; \n    }\n  }\n    \n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// import pages to display\nimport HomePage from '../../pages/HomePage';\nimport AllCountries from '../../pages/AllCountries';\nimport SelectedCountry from '../../pages/SelectedCountry';\nimport FavoriteCountries from '../../pages/FavoriteCountries';\n\nimport GlobalStyle from '../../GlobalStyle';\nimport * as ROUTES from '../../constants/routes';\n\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route path={ROUTES.BASE} exact component={HomePage} />\n        <Route path={ROUTES.ALL_COUNTRIES} exact component={AllCountries} />\n        <Route\n          path={ROUTES.SELECTED_COUNTRY}\n          exact\n          component={SelectedCountry}\n        />\n        <Route\n          path={ROUTES.FAVORITE_COUNTRIES}\n          exact\n          component={FavoriteCountries}\n        />\n        <Route>404, Page not Found</Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","export const BASE = '/';\nexport const ALL_COUNTRIES = '/countries/all';\nexport const SELECTED_COUNTRY = '/countries/:country';\nexport const FAVORITE_COUNTRIES = '/countries/favorites';\n","import { FETCH_ALL_COUNTRIES } from '../actions/types';\n\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n\n  switch (action.type) {\n    case FETCH_ALL_COUNTRIES:\n      return action.payload;  \n    default:\n      return state;\n  }\n}\n","import { FAVORITE_COUNTRY } from '../actions/types';\n\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n\n  switch (action.type) {\n    case FAVORITE_COUNTRY:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n","import { SEARCH_COUNTRY } from '../actions/types';\n\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    \n    case SEARCH_COUNTRY:\n      return action.payload;\n  \n    default:\n      return state;\n  }\n}\n","import { SELECT_COUNTRY } from '../actions/types';\n\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_COUNTRY:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport allCountries from './allCountries';\nimport favoriteCountries from './favoriteCountries';\nimport searchedCountry from './searchedCountry';\nimport selectedCountry from './selectedCountry';\n\nexport default combineReducers({\n  allCountries,\n  favoriteCountries,\n  searchedCountry,\n  selectedCountry\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App/index';\nimport rootReducer from './store/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst rootComponent = (\n  <Provider store={store}>\n    <Router basename=\"/\" >\n      <App />\n    </Router>\n  </Provider>\n);\n\nconst rootDOM = document.querySelector('#root');\n\nReactDOM.render(rootComponent, rootDOM);\n\n// Hot Module Replacement\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}